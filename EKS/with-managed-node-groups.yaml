AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ClusterVersion:
    Type: String
    Description: EKS Cluster Version to use.
    Default: "1.30"
  ClusterName:
    Type: String
    Description: Name of the EKS Cluster being created.
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID to deploy the EKS Cluster and worker nodes into.
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: Public Subnet 1 for the EKS Cluster.
  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Public Subnet 2 for the EKS Cluster.
  PrivateSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: Private Subnet 1 for the EKS Cluster.
  PrivateSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Private Subnet 2 for the EKS Cluster.
  NodeGroupInstanceTypes:
    Type: String
    Default: t3.medium

Resources:
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Communication between the control plane and worker nodegroups
      VpcId: !Ref VPCId
      GroupName: !Sub ${ClusterName}ControlPlaneSecurityGroup

  ControlPlaneSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: "-1"
      SourceSecurityGroupId: !GetAtt ControlPlaneSecurityGroup.GroupId
      SourceSecurityGroupOwnerId: !Ref AWS::AccountId

  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: eks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonEKSClusterPolicy
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonEKSVPCResourceController

  ControlPlane:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Sub ${ClusterName}
      AccessConfig:
            AuthenticationMode: "API_AND_CONFIG_MAP"
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref ControlPlaneSecurityGroup
        SubnetIds:
          - !Ref PublicSubnet1
          - !Ref PublicSubnet2
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
      RoleArn: !GetAtt EKSClusterRole.Arn
      Version: !Ref ClusterVersion

  OidcProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      ClientIdList: 
        - "sts.amazonaws.com"
      ThumbprintList: # Required
        - "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
      Url: !GetAtt ControlPlane.OpenIdConnectIssuerUrl
  ManagedNodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      AmiType: AL2_x86_64
      ClusterName: !Ref ControlPlane
      InstanceTypes:
        - !Ref NodeGroupInstanceTypes
      NodeRole: !GetAtt NodeInstanceRole.Arn
      NodegroupName: !Sub ${ClusterName}ManagedNodeGroup
      ScalingConfig:
        DesiredSize: 2
        MaxSize: 2
        MinSize: 2
      Subnets:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2

  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ClusterName}NodeInstanceRole
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
      Path: /

  KubeProxyAddon:
    Type: AWS::EKS::Addon
    DependsOn:
         - "ControlPlane"
    Properties:
      AddonName: "kube-proxy" 
      ClusterName: !Ref ClusterName
      PreserveOnDelete: false
      ResolveConflicts: "OVERWRITE"

  VpcCNIAddon:
    Type: AWS::EKS::Addon
    DependsOn:
         - "ControlPlane"
    Properties:
      AddonName: "vpc-cni" 
      ClusterName: !Ref ClusterName
      PreserveOnDelete: false
      ResolveConflicts: "OVERWRITE"

Outputs:
     OIDCProviderArn:
      Value: !GetAtt OidcProvider.Arn